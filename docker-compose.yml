version: "3.8"

services:
  postgresdb:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    ports:
      - $POSTGRESDB_LOCAL_PORT:$POSTGRESDB_DOCKER_PORT
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $POSTGRESDB_USER -d $POSTGRESDB_DATABASE'"]
      interval: 5s
      retries: 3
      start_period: 30s
      timeout: 10s
    volumes:
      - db:/var/lib/postgres/data
      - ./db/initial.sql:/docker-entrypoint-initdb.d/init.sql
  app:
    depends_on:
        postgresdb:
            condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
       SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postgresdb:$POSTGRESDB_DOCKER_PORT/$POSTGRESDB_DATABASE",
        "spring.datasource.username" : "$POSTGRESDB_USER",
        "spring.datasource.password" : "$POSTGRESDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'

    stdin_open: true
    tty: true

volumes:
  db:
